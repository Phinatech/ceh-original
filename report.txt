Project Management Report

Project Name: CEH Original
Frontend Path: /workspaces/ceh-original/Frontend/src/pages/SignUp.tsx
Backend Path: /workspaces/ceh-original/Backend/

Summary:
The SignUp component is responsible for handling user registration. It includes form validation, error handling, and submission logic. The form collects user details such as full name, email, password, role, and institution.

Key Features:
1. Form Validation:
   - Full name is required.
   - Email is required and must be a valid email address.
   - Password is required and must be at least 8 characters long.
   - Password and confirm password must match.
   - Institution is required.

2. Error Handling:
   - Displays specific error messages for each form field.
   - General error message for failed account creation.

3. Form Submission:
   - Submits the form data to the registerUser function.
   - Navigates to the dashboard upon successful registration.
   - Displays a loading state during form submission.

Components Used:
- React useState for managing form data and errors.
- React Router's useNavigate for navigation.
- Lucide-react icons for form field icons.
- Tailwind CSS for styling.

Potential Improvements:
- Add more detailed validation for password strength.
- Implement client-side and server-side validation for enhanced security.
- Improve user feedback during form submission (e.g., progress indicators).

Conclusion:
The SignUp component is a crucial part of the user onboarding process, ensuring that users can create accounts with valid information. Proper validation and error handling enhance the user experience and prevent invalid data submission.

Database Design:
The backend directory contains the database design and implementation. We used PostgreSQL for our database due to its robustness and support for advanced features like JSONB, which allows us to store JSON data efficiently.

Key Features:
1. User Table:
   - Stores user information such as full name, email, password (hashed), role, and institution.
   - Ensures unique email addresses for each user.

2. Session Table:
   - Manages user sessions for authentication.
   - Stores session tokens and expiration times.

3. Institution Table:
   - Stores information about institutions.
   - Links users to their respective institutions.

Reasons for Using Libraries:
1. React:
   - Provides a component-based architecture for building reusable UI components.
   - Efficiently updates and renders components based on state changes.

2. React Router:
   - Facilitates navigation within the application.
   - Allows us to define routes and handle navigation programmatically.

3. Lucide-react:
   - Provides a collection of icons that are easy to integrate and customize.
   - Enhances the visual appeal of form fields with icons.

4. Tailwind CSS:
   - Offers utility-first CSS classes for rapid UI development.
   - Enables consistent styling across the application with minimal custom CSS.

5. PostgreSQL:
   - A powerful, open-source relational database system.
   - Supports advanced features like JSONB, full-text search, and more.

Software Project Management Tools:
- Tool(s) Used: [Specify the tool(s) used, e.g., Jira, Trello, Asana]
- Usage: [Explain how the tool(s) are used for project management]
- Screenshots: [Include screenshots of the project management board]
- Reference: [Include reference to the software engineering project management tool]

Daily/Regular Team Meetings:
- Screenshots: [Provide screenshots of daily team meeting sessions]
- Captions/Notes: [Include brief captions or notes explaining meeting discussions]

Team Collaboration Practices:
- Description: [Briefly describe team collaboration practices]

Progress Report:
- Figma Designs: [Submit screenshots demonstrating Figma designs and provide a link to the Figma designs]
- Database Designs: [Submit screenshots demonstrating database designs]
- Frontend Implementation: [Submit screenshots demonstrating frontend implementation]
- Backend Implementation: [Submit screenshots demonstrating API implementation]
- Team GitHub Repository: [Provide a link to the team GitHub repository]

Report Format: The Teamwork Report must be submitted as a separate PDF document.